{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Getting started \u00b6 Pre-requisite \u00b6 git node.js v10 Activated Intel AMT Installation \u00b6 1.Clone the repository \u00b6 git clone https://github.com/open-amt-cloud-toolkit/MPS.git cd MPS 2.Add/modify config.json \u00b6 create config.json file in private folder under MPS_microservice. These following parameters can be configured. usewhitelist - set true to whitelist the GUIDs stored in guids.json. commonName - used in self signed certificate can be either FQDN or IP address. useglobalmpscredentials - set to true, such that any device using global mpsusername and mpspass are allowed to connect. https - set to true to enable TLS. mpstlsoffload - set to true to run MPS without TLS. generateCertificates - Generates certificates automatically. SSL and Root cert are generated and stored in private folder when set to true. loggeroff - Set to true to turnoff logs. By default, they are turnon. For example: { \"usewhitelist\" : false , \"commonName\" : \"127.0.0.1\" , \"mpsport\" : 4433 , \"mpsusername\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"useglobalmpscredentials\" : true , \"country\" : \"US\" , \"company\" : \"NoCorp\" , \"debug\" : true , \"listenany\" : true , \"https\" : true , \"mpstlsoffload\" : false , \"webport\" : 3000 , \"generateCertificates\" : true , \"loggeroff\" : true } 3.Add/modify credentials.json \u00b6 Create credentials.json file in private folder. This file is used to simulate credential storage. Add new device MPS user name and password are required to connect to MPS server. Where as, AMT user name and password are required whenever a request is made to ME. For example: { \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" : { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" }, \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" : { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" } } 4.Add/modify guids.json \u00b6 If usewhitelist is set to true in config.json file, add guids.json file in private folder to whitelist guids that are allowed to connect to MPS. This file is used to simulate whitelisting based on GUID's. For example: [ \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"12345678-9abc-def1-2345-123456789000\" ] 5.Start the server \u00b6 Browse to MPS_microservice root folder npm install npm start This will install all the dependencies and start the server. Webserver runs on port 3000 by default and MPS Server listens on port 4433. Certificates are generated and stored in private folder. 6. Connect an AMT device \u00b6 Make sure the device is connected to internet. From the device browse to MPS server to Download MEScript. Next, download MeshCmd from site appropriate to device platform. From the folder where MEScript and MeshCmd downloaded, open Cli, run the command the below command. This runs a script that does all the configuration required for CIRA setup. Adds root certificate to trust MPS Server. Sets periodic connection to MPS. Enables environment detection. meshcmd.exe amtscript --script cira_setup.mescript --pass <amt password> Device will now get connected to MPS Server. Device credentials Make sure that AMT guid entry is present in credential file of server. Also in guids.json file if usewhitelist is set to true in config file.","title":"Getting started"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#pre-requisite","text":"git node.js v10 Activated Intel AMT","title":"Pre-requisite"},{"location":"#installation","text":"","title":"Installation"},{"location":"#1clone-the-repository","text":"git clone https://github.com/open-amt-cloud-toolkit/MPS.git cd MPS","title":"1.Clone the repository"},{"location":"#2addmodify-configjson","text":"create config.json file in private folder under MPS_microservice. These following parameters can be configured. usewhitelist - set true to whitelist the GUIDs stored in guids.json. commonName - used in self signed certificate can be either FQDN or IP address. useglobalmpscredentials - set to true, such that any device using global mpsusername and mpspass are allowed to connect. https - set to true to enable TLS. mpstlsoffload - set to true to run MPS without TLS. generateCertificates - Generates certificates automatically. SSL and Root cert are generated and stored in private folder when set to true. loggeroff - Set to true to turnoff logs. By default, they are turnon. For example: { \"usewhitelist\" : false , \"commonName\" : \"127.0.0.1\" , \"mpsport\" : 4433 , \"mpsusername\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"useglobalmpscredentials\" : true , \"country\" : \"US\" , \"company\" : \"NoCorp\" , \"debug\" : true , \"listenany\" : true , \"https\" : true , \"mpstlsoffload\" : false , \"webport\" : 3000 , \"generateCertificates\" : true , \"loggeroff\" : true }","title":"2.Add/modify config.json"},{"location":"#3addmodify-credentialsjson","text":"Create credentials.json file in private folder. This file is used to simulate credential storage. Add new device MPS user name and password are required to connect to MPS server. Where as, AMT user name and password are required whenever a request is made to ME. For example: { \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" : { \"name\" : \"Win7-machine\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" }, \"bf49cf00-9164-11e4-952b-b8aeed7ec594\" : { \"name\" : \"Ubuntu-machine\" , \"mpsuser\" : \"xenial\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" } }","title":"3.Add/modify credentials.json"},{"location":"#4addmodify-guidsjson","text":"If usewhitelist is set to true in config.json file, add guids.json file in private folder to whitelist guids that are allowed to connect to MPS. This file is used to simulate whitelisting based on GUID's. For example: [ \"8dad96cb-c3db-11e6-9c43-bc0000d20000\" , \"12345678-9abc-def1-2345-123456789000\" ]","title":"4.Add/modify guids.json"},{"location":"#5start-the-server","text":"Browse to MPS_microservice root folder npm install npm start This will install all the dependencies and start the server. Webserver runs on port 3000 by default and MPS Server listens on port 4433. Certificates are generated and stored in private folder.","title":"5.Start the server"},{"location":"#6-connect-an-amt-device","text":"Make sure the device is connected to internet. From the device browse to MPS server to Download MEScript. Next, download MeshCmd from site appropriate to device platform. From the folder where MEScript and MeshCmd downloaded, open Cli, run the command the below command. This runs a script that does all the configuration required for CIRA setup. Adds root certificate to trust MPS Server. Sets periodic connection to MPS. Enables environment detection. meshcmd.exe amtscript --script cira_setup.mescript --pass <amt password> Device will now get connected to MPS Server. Device credentials Make sure that AMT guid entry is present in credential file of server. Also in guids.json file if usewhitelist is set to true in config file.","title":"6. Connect an AMT device"},{"location":"activateAMT/","text":"Activate AMT Device \u00b6 Video Link Detailed Setup document Steps to Activate Intel AMT \u00b6 Connect a device to Monitor and power up. The Intel AMT platform displays the BIOS startup screen during power up, then processes the BIOS Extensions. Entry into the Intel AMT BIOS Extension (MEBx) is BIOS vendor-dependent. If you are using an Intel AMT reference platform (SDS or SDP), the display screen prompts you to press . Then the control passes to the Intel CSME (or MEBx) main menu. Enter the Intel CSME default password (\u201cadmin\u201d). Change the default password (required to proceed). Select Intel AMT Configuration. Select/Verify \u2018Manageability Feature Selection\u2019 is Enabled. Select \u2018Activate Network Access\u2019 and then, select \u201cY\u201d to confirm AMT activation. Select Network Setup. Then, select Intel ME network Name Settings. Enter Host Name (Not a mandatory step). Select \u2018SOL/Storage Redirection/KVM\u2019, enable all the required features. Select User Consent, By default, this is set for KVM only; Change it to none. Save and Exit Intel CSME (or MEBx). Add new device For an OEM system, it is easy to use the one-time boot menu, although entry into Intel CSME is usually an included option as part of the one-time boot menu. The exact key sequence varies by OEM, BIOS and Model. New password must be a strong. It should contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and be at least eight characters.","title":"Activate AMT"},{"location":"activateAMT/#activate-amt-device","text":"Video Link Detailed Setup document","title":"Activate AMT Device"},{"location":"activateAMT/#steps-to-activate-intel-amt","text":"Connect a device to Monitor and power up. The Intel AMT platform displays the BIOS startup screen during power up, then processes the BIOS Extensions. Entry into the Intel AMT BIOS Extension (MEBx) is BIOS vendor-dependent. If you are using an Intel AMT reference platform (SDS or SDP), the display screen prompts you to press . Then the control passes to the Intel CSME (or MEBx) main menu. Enter the Intel CSME default password (\u201cadmin\u201d). Change the default password (required to proceed). Select Intel AMT Configuration. Select/Verify \u2018Manageability Feature Selection\u2019 is Enabled. Select \u2018Activate Network Access\u2019 and then, select \u201cY\u201d to confirm AMT activation. Select Network Setup. Then, select Intel ME network Name Settings. Enter Host Name (Not a mandatory step). Select \u2018SOL/Storage Redirection/KVM\u2019, enable all the required features. Select User Consent, By default, this is set for KVM only; Change it to none. Save and Exit Intel CSME (or MEBx). Add new device For an OEM system, it is easy to use the one-time boot menu, although entry into Intel CSME is usually an included option as part of the one-time boot menu. The exact key sequence varies by OEM, BIOS and Model. New password must be a strong. It should contain at least one uppercase letter, one lowercase letter, one digit, and one special character, and be at least eight characters.","title":"Steps to Activate Intel AMT"},{"location":"api/","text":"Server \u00b6 url : '{protocol}://{host}:{port}' variables : protocol : enum : - http - https default : https host : default : 'localhost' port : enum : - '3000' default : '3000' REST API \u00b6 Base path \u00b6 /amt/ /admin/ Example: \u00b6 url: https://localhost:3000/amt HTTP Method \u00b6 POST Request body \u00b6 Method in the request body tells the action that can be performed on the client device. Payload will vary with each method and by default contains the guid of the client details. Click here to find the currently supported methods and examples in detail. requestBody : content : application/json : schema : type : object properties : apiKey : type : string method : type : string payload : type : object required : - apiKey - method - payload Response body \u00b6 Success response would vary with each method that is requested. Below is the generic pattern for the error codes. response : content : application/json; charset=utf-8 : schema : properties : status : type : number error : type : string Click here for supported input and output types. Example Value '200' : { \"ResponseBody\" : responseBody } '400' : { \"status\" : 400 , \"error\" : \"Request missing amt guid\" } '404' : { \"status\" : 404 , \"error\" : \"Device not found/connected. Please connect again using CIRA\" } '408' : { \"status\" : 408 , \"error\" : \"Timeout error\" } '500' : { \"status\" : 500 , \"error\" : \"Internal server error\" } WebSocket \u00b6 Base path \u00b6 /relay/ /notifications/","title":"API"},{"location":"api/#server","text":"url : '{protocol}://{host}:{port}' variables : protocol : enum : - http - https default : https host : default : 'localhost' port : enum : - '3000' default : '3000'","title":"Server"},{"location":"api/#rest-api","text":"","title":"REST API"},{"location":"api/#base-path","text":"/amt/ /admin/","title":"Base path"},{"location":"api/#example","text":"url: https://localhost:3000/amt","title":"Example:"},{"location":"api/#http-method","text":"POST","title":"HTTP Method"},{"location":"api/#request-body","text":"Method in the request body tells the action that can be performed on the client device. Payload will vary with each method and by default contains the guid of the client details. Click here to find the currently supported methods and examples in detail. requestBody : content : application/json : schema : type : object properties : apiKey : type : string method : type : string payload : type : object required : - apiKey - method - payload","title":"Request body"},{"location":"api/#response-body","text":"Success response would vary with each method that is requested. Below is the generic pattern for the error codes. response : content : application/json; charset=utf-8 : schema : properties : status : type : number error : type : string Click here for supported input and output types. Example Value '200' : { \"ResponseBody\" : responseBody } '400' : { \"status\" : 400 , \"error\" : \"Request missing amt guid\" } '404' : { \"status\" : 404 , \"error\" : \"Device not found/connected. Please connect again using CIRA\" } '408' : { \"status\" : 408 , \"error\" : \"Timeout error\" } '500' : { \"status\" : 500 , \"error\" : \"Internal server error\" }","title":"Response body"},{"location":"api/#websocket","text":"","title":"WebSocket"},{"location":"api/#base-path_1","text":"/relay/ /notifications/","title":"Base path"},{"location":"license/","text":"License \u00b6","title":"License"},{"location":"license/#license","text":"","title":"License"},{"location":"release-notes/","text":"Release Notes \u00b6 MPS V1 \u00b6 MPS server migrated to typescript project from traditional node js. All the REST API interfaces are changed to new interfaces. Now, there are four end points which are categarized based on the functionality. /Admin - for all the admin user operations like downloading mescript, root certificate, disconnected device etc. /AMT - for all AMT operations /relay - for KVM operations /notifications - fo updating the device connections. Known Defects \u00b6 Under high pressure, device responds as timed out. Make sure you give 30 to 60 seconds before proceeding.","title":"Release notes"},{"location":"release-notes/#release-notes","text":"","title":"Release Notes"},{"location":"release-notes/#mps-v1","text":"MPS server migrated to typescript project from traditional node js. All the REST API interfaces are changed to new interfaces. Now, there are four end points which are categarized based on the functionality. /Admin - for all the admin user operations like downloading mescript, root certificate, disconnected device etc. /AMT - for all AMT operations /relay - for KVM operations /notifications - fo updating the device connections.","title":"MPS V1"},{"location":"release-notes/#known-defects","text":"Under high pressure, device responds as timed out. Make sure you give 30 to 60 seconds before proceeding.","title":"Known Defects"},{"location":"methods/alldevices/","text":"Admin Methods \u00b6 All Devices \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"AllDevices\" , \"payload\" :{} } Example: Success ResponseBody \u00b6 [ { \"name\" : \"ubuntu\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"aa745e97-6416-4495-9b34-54b2030b1193\" , \"icon\" : 1 , \"conn\" : 0 }, { \"name\" : \"Windows\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"4bac9510-04a6-4321-bae2-d45ddf07b684\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"All Devices"},{"location":"methods/alldevices/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/alldevices/#all-devices","text":"Click here for supported input and output types.","title":"All Devices"},{"location":"methods/alldevices/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"AllDevices\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/alldevices/#example-success-responsebody","text":"[ { \"name\" : \"ubuntu\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"aa745e97-6416-4495-9b34-54b2030b1193\" , \"icon\" : 1 , \"conn\" : 0 }, { \"name\" : \"Windows\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"4bac9510-04a6-4321-bae2-d45ddf07b684\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"Example: Success ResponseBody"},{"location":"methods/auditlog/","text":"AMT Audit logs \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"AuditLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ [ { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2003-12-29T05:46:37.000Z\" , \"mcLocationType\" : 102 , \"netAddress\" : \" \\u0000 \\t127.0.0.1 \\u0004 Z-=\u00ef\u00bf\u00bd\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ ] }, \"exStr\" : \"Invalid Date\" }, { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2017-12-21T17:30:39.000Z\" , \"mcLocationType\" : 189 , \"netAddress\" : \" \\u0000 \\t1\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ 55 , 46 , 48 , 46 , 48 , 46 , 49 , 4 , 90 , 59 , 239 , 191 , 189 , 62 ] }, \"exStr\" : \"5/3/1999, 11:24:30 PM\" } ] } }","title":"Audit log"},{"location":"methods/auditlog/#amt-audit-logs","text":"Click here for supported input and output types.","title":"AMT Audit logs"},{"location":"methods/auditlog/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"AuditLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } }","title":"Example: Request Body"},{"location":"methods/auditlog/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ [ { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2003-12-29T05:46:37.000Z\" , \"mcLocationType\" : 102 , \"netAddress\" : \" \\u0000 \\t127.0.0.1 \\u0004 Z-=\u00ef\u00bf\u00bd\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ ] }, \"exStr\" : \"Invalid Date\" }, { \"auditAppID\" : 21 , \"eventID\" : 0 , \"initiatorType\" : 0 , \"auditApp\" : \"Network Time\" , \"event\" : \"Intel(R) ME Time Set\" , \"initiator\" : \"$$OsAdmin\" , \"time\" : \"2017-12-21T17:30:39.000Z\" , \"mcLocationType\" : 189 , \"netAddress\" : \" \\u0000 \\t1\" , \"ex\" :{ \"type\" : \"Buffer\" , \"data\" :[ 55 , 46 , 48 , 46 , 48 , 46 , 49 , 4 , 90 , 59 , 239 , 191 , 189 , 62 ] }, \"exStr\" : \"5/3/1999, 11:24:30 PM\" } ] } }","title":"Example : Success ResponseBody"},{"location":"methods/connecteddevices/","text":"Admin Methods \u00b6 Connected Devices \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"ConnectedDevices\" , \"payload\" :{} } Example : Success ResponseBody \u00b6 [ { \"name\" : \"ubuntu\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"aa745e97-6416-4495-9b34-54b2030b1193\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"Connected Devices"},{"location":"methods/connecteddevices/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/connecteddevices/#connected-devices","text":"Click here for supported input and output types.","title":"Connected Devices"},{"location":"methods/connecteddevices/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"ConnectedDevices\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/connecteddevices/#example-success-responsebody","text":"[ { \"name\" : \"ubuntu\" , \"mpsuser\" : \"standalone\" , \"mpspass\" : \"P@ssw0rd\" , \"amtuser\" : \"admin\" , \"amtpass\" : \"P@ssw0rd\" , \"host\" : \"aa745e97-6416-4495-9b34-54b2030b1193\" , \"icon\" : 1 , \"conn\" : 0 } ]","title":"Example : Success ResponseBody"},{"location":"methods/disconnect/","text":"Admin Methods \u00b6 Disconnect Device \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"Disconnect\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 { \"success\" : 200 , \"description\" : \"CIRA connection disconnected : 038d0240-045c-05f4-7706-980700080009\" }","title":"Disconnect"},{"location":"methods/disconnect/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/disconnect/#disconnect-device","text":"Click here for supported input and output types.","title":"Disconnect Device"},{"location":"methods/disconnect/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"Disconnect\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/disconnect/#example-success-responsebody","text":"{ \"success\" : 200 , \"description\" : \"CIRA connection disconnected : 038d0240-045c-05f4-7706-980700080009\" }","title":"Example : Success ResponseBody"},{"location":"methods/eventlog/","text":"AMT Event logs \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"EventLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ [ { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 11 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:40.000Z\" , \"entityStr\" : \"Add in card\" , \"desc\" : \"Option ROM initialization\" }, { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 34 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 6 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:39.000Z\" , \"entityStr\" : \"BIOS\" , \"desc\" : \"USB resource configuration\" } ] } }","title":"Event log"},{"location":"methods/eventlog/#amt-event-logs","text":"Click here for supported input and output types.","title":"AMT Event logs"},{"location":"methods/eventlog/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"EventLog\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"logsPerPage\" : 10 , \"page\" : 5 , \"startDate\" : \"2019-04-11\" , \"endDate\" : \"2019-04-18\" } }","title":"Example: Request Body"},{"location":"methods/eventlog/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ [ { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 11 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 8 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:40.000Z\" , \"entityStr\" : \"Add in card\" , \"desc\" : \"Option ROM initialization\" }, { \"deviceAddress\" : 255 , \"eventSensorType\" : 15 , \"eventType\" : 111 , \"eventOffset\" : 2 , \"eventSourceType\" : 104 , \"eventSeverity\" : 1 , \"sensorNumber\" : 255 , \"entity\" : 34 , \"entityInstance\" : 0 , \"eventData\" :[ 64 , 6 , 0 , 0 , 0 , 0 , 0 , 0 ], \"time\" : \"2019-04-11T17:57:39.000Z\" , \"entityStr\" : \"BIOS\" , \"desc\" : \"USB resource configuration\" } ] } }","title":"Example : Success ResponseBody"},{"location":"methods/generalsettings/","text":"AMT General Settings \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"GeneralSettings\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"amtNetworkEnabled\" : 1 , \"ddnsPeriodicUpdateInterval\" : 1440 , \"ddnsTTL\" : 900 , \"ddnsUpdateByDHCPServerEnabled\" : true , \"ddnsUpdateEnabled\" : false , \"dhcpv6ConfigurationTimeout\" : 0 , \"digestRealm\" : \"Digest:A4070000000000000000000000000000\" , \"elementName\" : \"Intel(r) AMT: General Settings\" , \"hostName\" : \"Hostname\" , \"hostOSFQDN\" : \"DESKTOP-1A99FM4\" , \"idleWakeTimeout\" : 65535 , \"instanceID\" : \"Intel(r) AMT: General Settings\" , \"networkInterfaceEnabled\" : true , \"pingResponseEnabled\" : true , \"powerSource\" : 0 , \"preferredAddressFamily\" : 0 , \"presenceNotificationInterval\" : 0 , \"privacyLevel\" : 0 , \"rmcpPingResponseEnabled\" : true , \"sharedFQDN\" : true , \"wsmanOnlyMode\" : false } }","title":"General settings"},{"location":"methods/generalsettings/#amt-general-settings","text":"Click here for supported input and output types.","title":"AMT General Settings"},{"location":"methods/generalsettings/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"GeneralSettings\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/generalsettings/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"amtNetworkEnabled\" : 1 , \"ddnsPeriodicUpdateInterval\" : 1440 , \"ddnsTTL\" : 900 , \"ddnsUpdateByDHCPServerEnabled\" : true , \"ddnsUpdateEnabled\" : false , \"dhcpv6ConfigurationTimeout\" : 0 , \"digestRealm\" : \"Digest:A4070000000000000000000000000000\" , \"elementName\" : \"Intel(r) AMT: General Settings\" , \"hostName\" : \"Hostname\" , \"hostOSFQDN\" : \"DESKTOP-1A99FM4\" , \"idleWakeTimeout\" : 65535 , \"instanceID\" : \"Intel(r) AMT: General Settings\" , \"networkInterfaceEnabled\" : true , \"pingResponseEnabled\" : true , \"powerSource\" : 0 , \"preferredAddressFamily\" : 0 , \"presenceNotificationInterval\" : 0 , \"privacyLevel\" : 0 , \"rmcpPingResponseEnabled\" : true , \"sharedFQDN\" : true , \"wsmanOnlyMode\" : false } }","title":"Example : Success ResponseBody"},{"location":"methods/hardwareinfo/","text":"AMT Hadware Information \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"HardwareInformation\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"CIM_ComputerSystemPackage\" : { \"response\" : { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"RreferenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" }, \"status\" : 200 }, \"CIM_SystemPackaging\" : { \"responses\" : [ { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" } ], \"status\" : 200 }, \"CIM_Chassis\" : { \"response\" : { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" }, \"status\" : 200 }, \"CIM_Chip\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Chip\" , \"elementName\" : \"Managed System Processor Chip\" , \"manufacturer\" : \"Intel(R) Corporation\" , \"operationalStatus\" : 0 , \"tag\" : \"CPU 0\" , \"version\" : \"Intel(R) Core(TM) i5-7300U CPU @ 2.60GHz\" }, { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_Card\" : { \"response\" : { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, \"status\" : 200 }, \"CIM_BIOSElement\" : { \"response\" : { \"elementName\" : \"Primary BIOS\" , \"manufacturer\" : \"Intel Corp.\" , \"name\" : \"Primary BIOS\" , \"operationalStatus\" : 0 , \"primaryBIOS\" : true , \"releaseDate\" : { \"datetime\" : \"2018-03-15T00:00:00Z\" }, \"softwareElementID\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" , \"softwareElementState\" : 2 , \"targetOperatingSystem\" : 66 , \"version\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" }, \"status\" : 200 }, \"CIM_Processor\" : { \"responses\" : [ { \"cpuStatus\" : 1 , \"creationClassName\" : \"CIM_Processor\" , \"currentClockSpeed\" : 2500 , \"deviceID\" : \"CPU 0\" , \"elementName\" : \"Managed System CPU\" , \"enabledState\" : 2 , \"externalBusClockSpeed\" : 100 , \"family\" : 205 , \"healthState\" : 0 , \"maxClockSpeed\" : 8300 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"role\" : \"Central\" , \"stepping\" : 9 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" , \"upgradeMethod\" : 2 } ], \"status\" : 200 }, \"CIM_PhysicalMemory\" : { \"responses\" : [ { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_MediaAccessDevice\" : { \"responses\" : [ { \"capabilities\" : [ 4 , 10 ], \"creationClassName\" : \"CIM_MediaAccessDevice\" , \"deviceID\" : \"MEDIA DEV 0\" , \"elementName\" : \"Managed System Media Access Device\" , \"enabledDefault\" : 2 , \"enabledState\" : 0 , \"maxMediaSize\" : 250059350 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"security\" : 2 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" } ], \"status\" : 200 }, \"CIM_PhysicalPackage\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, { \"creationClassName\" : \"CIM_PhysicalPackage\" , \"elementName\" : \"Managed System Storage Media Package\" , \"model\" : \"Samsung SSD 850 EVO M.2 250GB \" , \"operationalStatus\" : 0 , \"packageType\" : 15 , \"serialNumber\" : \"S33CNX0JC36654D \" , \"tag\" : \"Storage Media Package 0\" }, { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" } ], \"status\" : 200 } } }","title":"Hardware information"},{"location":"methods/hardwareinfo/#amt-hadware-information","text":"Click here for supported input and output types.","title":"AMT Hadware Information"},{"location":"methods/hardwareinfo/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"HardwareInformation\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/hardwareinfo/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"CIM_ComputerSystemPackage\" : { \"response\" : { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"RreferenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" }, \"status\" : 200 }, \"CIM_SystemPackaging\" : { \"responses\" : [ { \"antecedent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_Chassis\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_Chassis\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"CIM_Chassis\" , \"@name\" : \"Tag\" } ] } } }, \"dependent\" : { \"address\" : \"http://schemas.xmlsoap.org/ws/2004/08/addressing/role/anonymous\" , \"referenceParameters\" : { \"resourceURI\" : \"http://schemas.dmtf.org/wbem/wscim/1/cim-schema/2/CIM_ComputerSystem\" , \"selectorSet\" : { \"selector\" : [ { \"value\" : \"CIM_ComputerSystem\" , \"@name\" : \"CreationClassName\" }, { \"value\" : \"ManagedSystem\" , \"@name\" : \"Name\" } ] } } }, \"platformGUID\" : \"1095AC4BA6042143BAE2D45DDF07B684\" } ], \"status\" : 200 }, \"CIM_Chassis\" : { \"response\" : { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" }, \"status\" : 200 }, \"CIM_Chip\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Chip\" , \"elementName\" : \"Managed System Processor Chip\" , \"manufacturer\" : \"Intel(R) Corporation\" , \"operationalStatus\" : 0 , \"tag\" : \"CPU 0\" , \"version\" : \"Intel(R) Core(TM) i5-7300U CPU @ 2.60GHz\" }, { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_Card\" : { \"response\" : { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, \"status\" : 200 }, \"CIM_BIOSElement\" : { \"response\" : { \"elementName\" : \"Primary BIOS\" , \"manufacturer\" : \"Intel Corp.\" , \"name\" : \"Primary BIOS\" , \"operationalStatus\" : 0 , \"primaryBIOS\" : true , \"releaseDate\" : { \"datetime\" : \"2018-03-15T00:00:00Z\" }, \"softwareElementID\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" , \"softwareElementState\" : 2 , \"targetOperatingSystem\" : 66 , \"version\" : \"DNKBLi5v.86A.0040.2018.0315.1451\" }, \"status\" : 200 }, \"CIM_Processor\" : { \"responses\" : [ { \"cpuStatus\" : 1 , \"creationClassName\" : \"CIM_Processor\" , \"currentClockSpeed\" : 2500 , \"deviceID\" : \"CPU 0\" , \"elementName\" : \"Managed System CPU\" , \"enabledState\" : 2 , \"externalBusClockSpeed\" : 100 , \"family\" : 205 , \"healthState\" : 0 , \"maxClockSpeed\" : 8300 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"role\" : \"Central\" , \"stepping\" : 9 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" , \"upgradeMethod\" : 2 } ], \"status\" : 200 }, \"CIM_PhysicalMemory\" : { \"responses\" : [ { \"bankLabel\" : \"BANK 0\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300C5\" , \"speed\" : 0 , \"tag\" : 9876543210 }, { \"bankLabel\" : \"BANK 2\" , \"capacity\" : 4294967296 , \"creationClassName\" : \"CIM_PhysicalMemory\" , \"elementName\" : \"Managed System Memory Chip\" , \"formFactor\" : 13 , \"manufacturer\" : \"04EF\" , \"memoryType\" : 26 , \"partNumber\" : \"TEAMGROUP-SD4-2133 \" , \"serialNumber\" : \"020300BD\" , \"speed\" : 0 , \"tag\" : \"9876543210 (#2)\" } ], \"status\" : 200 }, \"CIM_MediaAccessDevice\" : { \"responses\" : [ { \"capabilities\" : [ 4 , 10 ], \"creationClassName\" : \"CIM_MediaAccessDevice\" , \"deviceID\" : \"MEDIA DEV 0\" , \"elementName\" : \"Managed System Media Access Device\" , \"enabledDefault\" : 2 , \"enabledState\" : 0 , \"maxMediaSize\" : 250059350 , \"operationalStatus\" : 0 , \"requestedState\" : 12 , \"security\" : 2 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"ManagedSystem\" } ], \"status\" : 200 }, \"CIM_PhysicalPackage\" : { \"responses\" : [ { \"canBeFRUed\" : true , \"creationClassName\" : \"CIM_Card\" , \"elementName\" : \"Managed System Base Board\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNB\" , \"operationalStatus\" : 0 , \"packageType\" : 9 , \"serialNumber\" : \"BTDN7490016E\" , \"tag\" : \"CIM_Card\" , \"version\" : \"J57626-503\" }, { \"creationClassName\" : \"CIM_PhysicalPackage\" , \"elementName\" : \"Managed System Storage Media Package\" , \"model\" : \"Samsung SSD 850 EVO M.2 250GB \" , \"operationalStatus\" : 0 , \"packageType\" : 15 , \"serialNumber\" : \"S33CNX0JC36654D \" , \"tag\" : \"Storage Media Package 0\" }, { \"chassisPackageType\" : 0 , \"creationClassName\" : \"CIM_Chassis\" , \"elementName\" : \"Managed System Chassis\" , \"manufacturer\" : \"Intel Corporation\" , \"model\" : \"NUC7i5DNHE\" , \"operationalStatus\" : 0 , \"packageType\" : 3 , \"serialNumber\" : \"DW1646647500075\" , \"tag\" : \"CIM_Chassis\" , \"version\" : \"J57828-503\" } ], \"status\" : 200 } } }","title":"Example : Success ResponseBody"},{"location":"methods/mescript/","text":"Admin Methods \u00b6 MEScript \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"MEScript\" , \"payload\" :{} } ResponseBody \u00b6 Downloads ME Script file. Sample JavaScript code : $.ajax({ url : '/admin' , method : 'POST' , data : JSON.stringify(postdata), contentType : \"application/json\" , success : function (data) { var blob = new Blob([data], {type : \"application/octet-stream\" } ); var url = window.URL.createObjectURL(blob); var a = document.createElement('a'); a.setAttribute('hidden', ''); a.setAttribute('href', url); a.setAttribute('download', fileName); document.body.appendChild(a); a.click(); document.body.removeChild(a); window.URL.revokeObjectURL(url); }, error : function(error){ console.log(error); }","title":"MEScript"},{"location":"methods/mescript/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/mescript/#mescript","text":"Click here for supported input and output types.","title":"MEScript"},{"location":"methods/mescript/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"MEScript\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/mescript/#responsebody","text":"Downloads ME Script file. Sample JavaScript code : $.ajax({ url : '/admin' , method : 'POST' , data : JSON.stringify(postdata), contentType : \"application/json\" , success : function (data) { var blob = new Blob([data], {type : \"application/octet-stream\" } ); var url = window.URL.createObjectURL(blob); var a = document.createElement('a'); a.setAttribute('hidden', ''); a.setAttribute('href', url); a.setAttribute('download', fileName); document.body.appendChild(a); a.click(); document.body.removeChild(a); window.URL.revokeObjectURL(url); }, error : function(error){ console.log(error); }","title":"ResponseBody"},{"location":"methods/poweraction/","text":"AMT Power action \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerAction\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"action\" : 2 } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"returnValue\" : 0 , \"returnValueStr\" : \"SUCCESS\" }","title":"Power action"},{"location":"methods/poweraction/#amt-power-action","text":"Click here for supported input and output types.","title":"AMT Power action"},{"location":"methods/poweraction/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerAction\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" , \"action\" : 2 } }","title":"Example: Request Body"},{"location":"methods/poweraction/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"returnValue\" : 0 , \"returnValueStr\" : \"SUCCESS\" }","title":"Example : Success ResponseBody"},{"location":"methods/powercapabilities/","text":"AMT Power Capabilities \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerCapabilities\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" : { \"powerUp\" : 2 , \"powerCycle\" : 5 , \"powerDown\" : 8 , \"reset\" : 10 , \"softOff\" : 12 , \"softReset\" : 14 , \"sleep\" : 4 , \"hibernate\" : 7 , \"powerUpToBIOS\" : 100 , \"resetToBIOS\" : 101 , \"resetToSecureErase\" : 104 , \"resetToIDE-RFloppy\" : 200 , \"powerOnToIDE-RFloppy\" : 201 , \"resetToIDE-RCDROM\" : 202 , \"powerOnToIDE-RCDROM\" : 203 , \"resetToPXE\" : 400 , \"powerOnToPXE\" : 401 }","title":"Power capabilities"},{"location":"methods/powercapabilities/#amt-power-capabilities","text":"Click here for supported input and output types.","title":"AMT Power Capabilities"},{"location":"methods/powercapabilities/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerCapabilities\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/powercapabilities/#example-success-responsebody","text":"'200' : { \"ResponseBody\" : { \"powerUp\" : 2 , \"powerCycle\" : 5 , \"powerDown\" : 8 , \"reset\" : 10 , \"softOff\" : 12 , \"softReset\" : 14 , \"sleep\" : 4 , \"hibernate\" : 7 , \"powerUpToBIOS\" : 100 , \"resetToBIOS\" : 101 , \"resetToSecureErase\" : 104 , \"resetToIDE-RFloppy\" : 200 , \"powerOnToIDE-RFloppy\" : 201 , \"resetToIDE-RCDROM\" : 202 , \"powerOnToIDE-RCDROM\" : 203 , \"resetToPXE\" : 400 , \"powerOnToPXE\" : 401 }","title":"Example : Success ResponseBody"},{"location":"methods/powerstate/","text":"AMT Power state \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"PowerState\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"powerState\" : 2 }","title":"Power state"},{"location":"methods/powerstate/#amt-power-state","text":"Click here for supported input and output types.","title":"AMT Power state"},{"location":"methods/powerstate/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"PowerState\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/powerstate/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"powerState\" : 2 }","title":"Example : Success ResponseBody"},{"location":"methods/rootcertificate/","text":"Admin Methods \u00b6 MPS RootCertificate \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"MPSRootCertificate\" , \"payload\" :{} } ResponseBody \u00b6 Downloads MPS root certificate.","title":"MPS Root Certificate"},{"location":"methods/rootcertificate/#admin-methods","text":"","title":"Admin Methods"},{"location":"methods/rootcertificate/#mps-rootcertificate","text":"Click here for supported input and output types.","title":"MPS RootCertificate"},{"location":"methods/rootcertificate/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"MPSRootCertificate\" , \"payload\" :{} }","title":"Example: Request Body"},{"location":"methods/rootcertificate/#responsebody","text":"Downloads MPS root certificate.","title":"ResponseBody"},{"location":"methods/types/","text":"Types \u00b6 Request body \u00b6 requestBody { apiKey : string; method : string; payload : any; } Response error body \u00b6 responseErrorBody { status: number; error: string; } All Devices \u00b6 interface devices { name : string; mpsuser : string; mpspass : string; amtuser : string; amtpass : string; host : string; icon : number; conn : number; } Audit log \u00b6 auditLog { auditAppID : number; eventID : number; initiatorType : number; auditApp : string; event : string; initiator : string; time : Date; mcLocationType : number; netAddress : string; ex : { type : string; data : number [] ; } ; exStr : string; } Event log \u00b6 eventLog { deviceAddress : number; eventSensorType : number; eventType : number; eventOffset : number; eventSourceType : number; eventSeverity : number; sensorNumber : number; entity : number; entityInstance : number; eventData : number[]; time : Date; entityStr : string; desc : string; } General settings \u00b6 generalSettings { amtNetworkEnabled : number; ddnsPeriodicUpdateInterval : number; ddnsTTL : number; ddnsUpdateByDHCPServerEnabled : boolean; ddnsUpdateEnabled : boolean; dhcpv6ConfigurationTimeout : number; digestRealm : string; elementName : string; hostName : string; hostOSFQDN : string; idleWakeTimeout : number; instanceID : string; networkInterfaceEnabled : boolean; pingResponseEnabled : boolean; powerSource : number; preferredAddressFamily : number; presenceNotificationInterval : number; privacyLevel : number; rmcpPingResponseEnabled : boolean; sharedFQDN : boolean; wsmanOnlyMode : boolean; } Hardware information \u00b6 module hardwareDetails { selector { value : string; @name : string; } selectorSet { selector : selector[]; } referenceParameters { resourceURI : string; selectorSet : selectorSet; } antecedent { address : string; referenceParameters : referenceParameters; } dependent { address : string; referenceParameters : referenceParameters; } response { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimComputerSystemPackage { response : response; status : number; } cimSystemPackagingResponses { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimSystemPackaging { responses : cimSystemPackagingResponses[]; status : number; } cimChassisResponse { chassisPackageType : number; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimChassis { response : cimChassisResponse; status : number; } cimChipRespons { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; operationalStatus : number; tag : any; version : string; bankLabel : string; capacity? : number; formFactor? : number; memoryType? : number; partNumber : string; serialNumber : string; speed? : number; } cimChip { responses : cimChipRespons[]; status : number; } cimCardResponse { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimCard { response : cimCardResponse; status : number; } cimBIOSElementResponse { elementName : string; manufacturer : string; name : string; operationalStatus : number; primaryBIOS : boolean; releaseDate : { datetime : Date; } ; softwareElementID : string; softwareElementState : number; targetOperatingSystem : number; version : string; } cimBIOSElement { response : cimBIOSElementResponse; status : number; } cimProcessorResponses { cpuStatus : number; creationClassName : string; currentClockSpeed : number; deviceID : string; elementName : string; enabledState : number; externalBusClockSpeed : number; family : number; healthState : number; maxClockSpeed : number; operationalStatus : number; requestedState : number; role : string; stepping : number; systemCreationClassName : string; systemName : string; upgradeMethod : number; } cimProcessor { responses : cimProcessorResponses[]; status : number; } cimPhysicalMemoryResponses { bankLabel : string; capacity : any; creationClassName : string; elementName : string; formFactor : number; manufacturer : string; memoryType : number; partNumber : string; serialNumber : string; speed : number; tag : any; } cimPhysicalMemory { responses : cimPhysicalMemoryResponses[]; status : number; } cimMediaAccessDeviceResponses { capabilities : number[]; creationClassName : string; deviceID : string; elementName : string; enabledDefault : number; enabledState : number; maxMediaSize : number; operationalStatus : number; requestedState : number; security : number; systemCreationClassName : string; systemName : string; } cimMediaAccessDevice { responses : cimMediaAccessDeviceResponses[]; status : number; } cimPhysicalPackageResponses { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; chassisPackageType? : number; } cimPhysicalPackage { responses : cimPhysicalPackageResponses[]; status : number; } hardwareinfo { CIM_ComputerSystemPackage : cimComputerSystemPackage; CIM_SystemPackaging : cimSystemPackaging; CIM_Chassis : cimChassis; CIM_Chip : cimChip; CIM_Card : cimCard; CIM_BIOSElement : cimBIOSElement; CIM_Processor : cimProcessor; CIM_PhysicalMemory : cimPhysicalMemory; CIM_MediaAccessDevice : cimMediaAccessDevice; CIM_PhysicalPackage : cimPhysicalPackage; } } Power action \u00b6 powerAction { returnValue : number; returnValueStr : string; } Power capabilities \u00b6 powerCapabilities { powerUp : number; powerCycle : number; powerDown : number; reset : number; softOff : number; softReset : number; sleep : number; hibernate : number; powerUpToBIOS : number; resetToBIOS : number; resetToSecureErase : number; resetToIDE-RFloppy : number; powerOnToIDE-RFloppy : number; resetToIDE-RCDROM : number; powerOnToIDE-RCDROM : number; resetToPXE : number; powerOnToPXE : number; } Power state \u00b6 powerState { powerState : number; } Version \u00b6 module versionInfo { cimSoftwareIdentityResponses { instanceID : string; isEntity : boolean; versionString : any; } cimSoftwareIdentity { responses : cimSoftwareIdentityResponses[]; status : number; } amtSetupAndConfigurationServiceResponse { creationClassName : string; elementName : string; enabledState : number; name : string; passwordModel : number; provisioningMode : number; provisioningServerOTP : string; provisioningState : number; requestedState : number; systemCreationClassName : string; systemName : string; zeroTouchConfigurationEnabled : boolean; } amtSetupAndConfigurationService { response : amtSetupAndConfigurationServiceResponse; status : number; } version { CIM_SoftwareIdentity : cimSoftwareIdentity; AMT_SetupAndConfigurationService : amtSetupAndConfigurationServiceResponse; } }","title":"Types"},{"location":"methods/types/#types","text":"","title":"Types"},{"location":"methods/types/#request-body","text":"requestBody { apiKey : string; method : string; payload : any; }","title":"Request body"},{"location":"methods/types/#response-error-body","text":"responseErrorBody { status: number; error: string; }","title":"Response error body"},{"location":"methods/types/#all-devices","text":"interface devices { name : string; mpsuser : string; mpspass : string; amtuser : string; amtpass : string; host : string; icon : number; conn : number; }","title":"All Devices"},{"location":"methods/types/#audit-log","text":"auditLog { auditAppID : number; eventID : number; initiatorType : number; auditApp : string; event : string; initiator : string; time : Date; mcLocationType : number; netAddress : string; ex : { type : string; data : number [] ; } ; exStr : string; }","title":"Audit log"},{"location":"methods/types/#event-log","text":"eventLog { deviceAddress : number; eventSensorType : number; eventType : number; eventOffset : number; eventSourceType : number; eventSeverity : number; sensorNumber : number; entity : number; entityInstance : number; eventData : number[]; time : Date; entityStr : string; desc : string; }","title":"Event log"},{"location":"methods/types/#general-settings","text":"generalSettings { amtNetworkEnabled : number; ddnsPeriodicUpdateInterval : number; ddnsTTL : number; ddnsUpdateByDHCPServerEnabled : boolean; ddnsUpdateEnabled : boolean; dhcpv6ConfigurationTimeout : number; digestRealm : string; elementName : string; hostName : string; hostOSFQDN : string; idleWakeTimeout : number; instanceID : string; networkInterfaceEnabled : boolean; pingResponseEnabled : boolean; powerSource : number; preferredAddressFamily : number; presenceNotificationInterval : number; privacyLevel : number; rmcpPingResponseEnabled : boolean; sharedFQDN : boolean; wsmanOnlyMode : boolean; }","title":"General settings"},{"location":"methods/types/#hardware-information","text":"module hardwareDetails { selector { value : string; @name : string; } selectorSet { selector : selector[]; } referenceParameters { resourceURI : string; selectorSet : selectorSet; } antecedent { address : string; referenceParameters : referenceParameters; } dependent { address : string; referenceParameters : referenceParameters; } response { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimComputerSystemPackage { response : response; status : number; } cimSystemPackagingResponses { antecedent : antecedent; dependent : dependent; platformGUID : string; } cimSystemPackaging { responses : cimSystemPackagingResponses[]; status : number; } cimChassisResponse { chassisPackageType : number; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimChassis { response : cimChassisResponse; status : number; } cimChipRespons { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; operationalStatus : number; tag : any; version : string; bankLabel : string; capacity? : number; formFactor? : number; memoryType? : number; partNumber : string; serialNumber : string; speed? : number; } cimChip { responses : cimChipRespons[]; status : number; } cimCardResponse { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; } cimCard { response : cimCardResponse; status : number; } cimBIOSElementResponse { elementName : string; manufacturer : string; name : string; operationalStatus : number; primaryBIOS : boolean; releaseDate : { datetime : Date; } ; softwareElementID : string; softwareElementState : number; targetOperatingSystem : number; version : string; } cimBIOSElement { response : cimBIOSElementResponse; status : number; } cimProcessorResponses { cpuStatus : number; creationClassName : string; currentClockSpeed : number; deviceID : string; elementName : string; enabledState : number; externalBusClockSpeed : number; family : number; healthState : number; maxClockSpeed : number; operationalStatus : number; requestedState : number; role : string; stepping : number; systemCreationClassName : string; systemName : string; upgradeMethod : number; } cimProcessor { responses : cimProcessorResponses[]; status : number; } cimPhysicalMemoryResponses { bankLabel : string; capacity : any; creationClassName : string; elementName : string; formFactor : number; manufacturer : string; memoryType : number; partNumber : string; serialNumber : string; speed : number; tag : any; } cimPhysicalMemory { responses : cimPhysicalMemoryResponses[]; status : number; } cimMediaAccessDeviceResponses { capabilities : number[]; creationClassName : string; deviceID : string; elementName : string; enabledDefault : number; enabledState : number; maxMediaSize : number; operationalStatus : number; requestedState : number; security : number; systemCreationClassName : string; systemName : string; } cimMediaAccessDevice { responses : cimMediaAccessDeviceResponses[]; status : number; } cimPhysicalPackageResponses { canBeFRUed : boolean; creationClassName : string; elementName : string; manufacturer : string; model : string; operationalStatus : number; packageType : number; serialNumber : string; tag : string; version : string; chassisPackageType? : number; } cimPhysicalPackage { responses : cimPhysicalPackageResponses[]; status : number; } hardwareinfo { CIM_ComputerSystemPackage : cimComputerSystemPackage; CIM_SystemPackaging : cimSystemPackaging; CIM_Chassis : cimChassis; CIM_Chip : cimChip; CIM_Card : cimCard; CIM_BIOSElement : cimBIOSElement; CIM_Processor : cimProcessor; CIM_PhysicalMemory : cimPhysicalMemory; CIM_MediaAccessDevice : cimMediaAccessDevice; CIM_PhysicalPackage : cimPhysicalPackage; } }","title":"Hardware information"},{"location":"methods/types/#power-action","text":"powerAction { returnValue : number; returnValueStr : string; }","title":"Power action"},{"location":"methods/types/#power-capabilities","text":"powerCapabilities { powerUp : number; powerCycle : number; powerDown : number; reset : number; softOff : number; softReset : number; sleep : number; hibernate : number; powerUpToBIOS : number; resetToBIOS : number; resetToSecureErase : number; resetToIDE-RFloppy : number; powerOnToIDE-RFloppy : number; resetToIDE-RCDROM : number; powerOnToIDE-RCDROM : number; resetToPXE : number; powerOnToPXE : number; }","title":"Power capabilities"},{"location":"methods/types/#power-state","text":"powerState { powerState : number; }","title":"Power state"},{"location":"methods/types/#version","text":"module versionInfo { cimSoftwareIdentityResponses { instanceID : string; isEntity : boolean; versionString : any; } cimSoftwareIdentity { responses : cimSoftwareIdentityResponses[]; status : number; } amtSetupAndConfigurationServiceResponse { creationClassName : string; elementName : string; enabledState : number; name : string; passwordModel : number; provisioningMode : number; provisioningServerOTP : string; provisioningState : number; requestedState : number; systemCreationClassName : string; systemName : string; zeroTouchConfigurationEnabled : boolean; } amtSetupAndConfigurationService { response : amtSetupAndConfigurationServiceResponse; status : number; } version { CIM_SoftwareIdentity : cimSoftwareIdentity; AMT_SetupAndConfigurationService : amtSetupAndConfigurationServiceResponse; } }","title":"Version"},{"location":"methods/version/","text":"AMT Version \u00b6 Click here for supported input and output types. Example: Request Body \u00b6 { \"apiKey\" : \"string\" , \"method\" : \"Version\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } } Example : Success ResponseBody \u00b6 '200' : { \"ResponseBody\" :{ \"CIM_SoftwareIdentity\" : { \"responses\" : [ { \"instanceID\" : \"Flash\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Netstack\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMTApps\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMT\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Sku\" , \"isEntity\" : true , \"versionString\" : 16392 }, { \"instanceID\" : \"VendorID\" , \"isEntity\" : true , \"versionString\" : 8086 }, { \"instanceID\" : \"Build Number\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Recovery Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Recovery Build Num\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Legacy Mode\" , \"isEntity\" : true , \"versionString\" : \"False\" }, { \"instanceID\" : \"AMT FW Core Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" } ], \"status\" : 200 }, \"AMT_SetupAndConfigurationService\" : { \"response\" : { \"creationClassName\" : \"AMT_SetupAndConfigurationService\" , \"elementName\" : \"Intel(r) AMT Setup and Configuration Service\" , \"enabledState\" : 5 , \"name\" : \"Intel(r) AMT Setup and Configuration Service\" , \"passwordModel\" : 1 , \"provisioningMode\" : 1 , \"provisioningServerOTP\" : \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\" , \"provisioningState\" : 2 , \"requestedState\" : 12 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"Intel(r) AMT\" , \"zeroTouchConfigurationEnabled\" : true }, \"status\" : 200 } }","title":"Version"},{"location":"methods/version/#amt-version","text":"Click here for supported input and output types.","title":"AMT Version"},{"location":"methods/version/#example-request-body","text":"{ \"apiKey\" : \"string\" , \"method\" : \"Version\" , \"payload\" :{ \"guid\" : \"038d0240-045c-05f4-7706-980700080009\" } }","title":"Example: Request Body"},{"location":"methods/version/#example-success-responsebody","text":"'200' : { \"ResponseBody\" :{ \"CIM_SoftwareIdentity\" : { \"responses\" : [ { \"instanceID\" : \"Flash\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Netstack\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMTApps\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"AMT\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Sku\" , \"isEntity\" : true , \"versionString\" : 16392 }, { \"instanceID\" : \"VendorID\" , \"isEntity\" : true , \"versionString\" : 8086 }, { \"instanceID\" : \"Build Number\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Recovery Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" }, { \"instanceID\" : \"Recovery Build Num\" , \"isEntity\" : true , \"versionString\" : 3425 }, { \"instanceID\" : \"Legacy Mode\" , \"isEntity\" : true , \"versionString\" : \"False\" }, { \"instanceID\" : \"AMT FW Core Version\" , \"isEntity\" : true , \"versionString\" : \"11.8.50\" } ], \"status\" : 200 }, \"AMT_SetupAndConfigurationService\" : { \"response\" : { \"creationClassName\" : \"AMT_SetupAndConfigurationService\" , \"elementName\" : \"Intel(r) AMT Setup and Configuration Service\" , \"enabledState\" : 5 , \"name\" : \"Intel(r) AMT Setup and Configuration Service\" , \"passwordModel\" : 1 , \"provisioningMode\" : 1 , \"provisioningServerOTP\" : \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=\" , \"provisioningState\" : 2 , \"requestedState\" : 12 , \"systemCreationClassName\" : \"CIM_ComputerSystem\" , \"systemName\" : \"Intel(r) AMT\" , \"zeroTouchConfigurationEnabled\" : true }, \"status\" : 200 } }","title":"Example : Success ResponseBody"}]}